name: Test

on: [push, pull_request]

jobs:
  build:
    name: ${{ matrix.name }}-py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu, windows, macos]
        python-version: [3.6, 3.7, 3.8]

        include:
          - name: ubuntu
            os: ubuntu-18.04

          - name: windows
            os: windows-latest

          - name: macos
            os: macos-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository -y ppa:nextgis/ppa
          sudo apt update
          sudo apt-get install libgdal-dev

      - name: Install (Linux)
        if: runner.os == 'Linux'
        run: |
          python -m pip install --upgrade pip
          pip install Cython
          pip install GDAL==$(gdal-config --version) \
              --global-option=build_ext \
              --global-option="-I/usr/include/gdal -L/usr/local/lib -lgdal"
          pip install .[tests]
      - name: Install (macOS / Windows)
        if: runner.os == 'macOS' || runner.os == 'Windows'
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install numpy  # cftime requires numpy already during setup
          pip install .

      - name: Lint with flake8 (Linux)
        if: runner.os == 'Linux' && matrix.python-version == '3.7'
        continue-on-error: true
        run: |
          pip install flake8
          flake8 . --statistics || echo "::error::Check flake8 output for errors"

      - name: Testfiles Setup
        run: |
          git clone --depth=1 https://github.com/atmtools/typhon-testfiles.git

      - name: Test (Linux / macOS)
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          export TYPHONTESTFILES=$PWD/typhon-testfiles
          pytest --pyargs typhon
      - name: Test (Windows)
        if: runner.os == 'Windows'
        run: |
          $Env:TYPHONTESTFILES = Join-Path $pwd "typhon-testfiles"
          pytest --pyargs typhon
